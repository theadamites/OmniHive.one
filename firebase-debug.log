[debug] [2023-04-02T01:14:52.899Z] ----------------------------------------------------------------------
[debug] [2023-04-02T01:14:52.900Z] Command:       /usr/local/bin/firebase /Users/adamelgendy/.cache/firebase/tools/lib/node_modules/firebase-tools/lib/bin/firebase init
[debug] [2023-04-02T01:14:52.901Z] CLI Version:   11.25.2
[debug] [2023-04-02T01:14:52.901Z] Platform:      darwin
[debug] [2023-04-02T01:14:52.901Z] Node Version:  v16.16.0
[debug] [2023-04-02T01:14:52.905Z] Time:          Sat Apr 01 2023 21:14:52 GMT-0400 (Eastern Daylight Time)
[debug] [2023-04-02T01:14:52.906Z] ----------------------------------------------------------------------
[debug] 
[debug] [2023-04-02T01:14:52.918Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2023-04-02T01:14:52.919Z] > authorizing via signed-in user (mystocks2001@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/adamelgendy/Desktop/OmniHive.Store

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2023-04-02T01:18:53.287Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2023-04-02T01:18:53.705Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2023-04-02T01:18:53.706Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project omnihive-2f218 (OmniHive) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2023-04-02T01:19:26.932Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com [none]
[debug] [2023-04-02T01:19:26.933Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com x-goog-quota-user=projects/omnihive-2f218
[debug] [2023-04-02T01:19:27.432Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com 200
[debug] [2023-04-02T01:19:27.433Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com [omitted]
[warn] ⚠  database: missing required API firebasedatabase.googleapis.com. Enabling now... 
[debug] [2023-04-02T01:19:27.435Z] >>> [apiv2][query] POST https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com:enable [none]
[debug] [2023-04-02T01:19:27.436Z] >>> [apiv2][(partial)header] POST https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com:enable x-goog-quota-user=projects/omnihive-2f218
[debug] [2023-04-02T01:19:28.477Z] <<< [apiv2][status] POST https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com:enable 200
[debug] [2023-04-02T01:19:28.480Z] <<< [apiv2][body] POST https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com:enable [omitted]
[debug] [2023-04-02T01:19:38.486Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com [none]
[debug] [2023-04-02T01:19:38.487Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com x-goog-quota-user=projects/omnihive-2f218
[debug] [2023-04-02T01:19:38.914Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com 200
[debug] [2023-04-02T01:19:38.914Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/omnihive-2f218/services/firebasedatabase.googleapis.com [omitted]
[info] ✔  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2023-04-02T01:19:38.923Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects/omnihive-2f218 [none]
[debug] [2023-04-02T01:19:39.168Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects/omnihive-2f218 200
[debug] [2023-04-02T01:19:39.169Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects/omnihive-2f218 {"projectId":"omnihive-2f218","projectNumber":"207213346137","displayName":"OmniHive","name":"projects/omnihive-2f218","resources":{"hostingSite":"omnihive-2f218"},"state":"ACTIVE","etag":"1_6b63cb10-f557-40cf-8a83-aefdf25a50d3"}
[debug] [2023-04-02T01:20:28.282Z] >>> [apiv2][query] POST https://firebasedatabase.googleapis.com/v1beta/projects/omnihive-2f218/locations/us-central1/instances databaseId=omnihive-2f218-default-rtdb&validateOnly=true
[debug] [2023-04-02T01:20:28.283Z] >>> [apiv2][body] POST https://firebasedatabase.googleapis.com/v1beta/projects/omnihive-2f218/locations/us-central1/instances {"type":"default_database"}
[debug] [2023-04-02T01:20:28.845Z] <<< [apiv2][status] POST https://firebasedatabase.googleapis.com/v1beta/projects/omnihive-2f218/locations/us-central1/instances 200
[debug] [2023-04-02T01:20:28.846Z] <<< [apiv2][body] POST https://firebasedatabase.googleapis.com/v1beta/projects/omnihive-2f218/locations/us-central1/instances {"name":"projects/207213346137/locations/us-central1/instances/omnihive-2f218-default-rtdb","project":"projects/207213346137","databaseUrl":"https://omnihive-2f218-default-rtdb.firebaseio.com","type":"DEFAULT_DATABASE","state":"ACTIVE"}
[debug] [2023-04-02T01:20:28.849Z] >>> [apiv2][query] POST https://firebasedatabase.googleapis.com/v1beta/projects/omnihive-2f218/locations/us-central1/instances databaseId=omnihive-2f218-default-rtdb
[debug] [2023-04-02T01:20:28.849Z] >>> [apiv2][body] POST https://firebasedatabase.googleapis.com/v1beta/projects/omnihive-2f218/locations/us-central1/instances {"type":"default_database"}
[debug] [2023-04-02T01:20:29.487Z] <<< [apiv2][status] POST https://firebasedatabase.googleapis.com/v1beta/projects/omnihive-2f218/locations/us-central1/instances 200
[debug] [2023-04-02T01:20:29.487Z] <<< [apiv2][body] POST https://firebasedatabase.googleapis.com/v1beta/projects/omnihive-2f218/locations/us-central1/instances {"name":"projects/207213346137/locations/us-central1/instances/omnihive-2f218-default-rtdb","project":"projects/207213346137","databaseUrl":"https://omnihive-2f218-default-rtdb.firebaseio.com","type":"DEFAULT_DATABASE","state":"ACTIVE"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2023-04-02T01:21:34.569Z] >>> [apiv2][query] GET https://omnihive-2f218-default-rtdb.firebaseio.com/.settings/rules.json [none]
[debug] [2023-04-02T01:21:35.059Z] <<< [apiv2][status] GET https://omnihive-2f218-default-rtdb.firebaseio.com/.settings/rules.json 200
[debug] [2023-04-02T01:21:35.060Z] <<< [apiv2][body] GET https://omnihive-2f218-default-rtdb.firebaseio.com/.settings/rules.json [stream]
[info] ✔  Database Rules for omnihive-2f218-default-rtdb have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2023-04-02T01:22:29.112Z] >>> [apiv2][query] GET https://www.gstatic.com/firebasejs/releases.json [none]
[debug] [2023-04-02T01:22:29.156Z] <<< [apiv2][status] GET https://www.gstatic.com/firebasejs/releases.json 200
[debug] [2023-04-02T01:22:29.157Z] <<< [apiv2][body] GET https://www.gstatic.com/firebasejs/releases.json {"current":{"version":"9.19.1","browserURL":"https://www.gstatic.com/firebasejs/9.19.1/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/9.19.1/firebase.tgz"},"live":{"version":"9.19","browserURL":"https://www.gstatic.com/firebasejs/live/9.19/firebase.js","packageURL":"https://www.gstatic.com/firebasejs/live/9.19/firebase.tgz"},"components":{"analytics":"https://www.gstatic.com/firebasejs/9.19.1/firebase-analytics.js","app":"https://www.gstatic.com/firebasejs/9.19.1/firebase-app.js","app-check":"https://www.gstatic.com/firebasejs/9.19.1/firebase-app-check.js","auth":"https://www.gstatic.com/firebasejs/9.19.1/firebase-auth.js","auth/cordova":"https://www.gstatic.com/firebasejs/9.19.1/firebase-auth/cordova.js","auth/react-native":"https://www.gstatic.com/firebasejs/9.19.1/firebase-auth/react-native.js","functions":"https://www.gstatic.com/firebasejs/9.19.1/firebase-functions.js","firestore":"https://www.gstatic.com/firebasejs/9.19.1/firebase-firestore.js","firestore/lite":"https://www.gstatic.com/firebasejs/9.19.1/firebase-firestore/lite.js","installations":"https://www.gstatic.com/firebasejs/9.19.1/firebase-installations.js","storage":"https://www.gstatic.com/firebasejs/9.19.1/firebase-storage.js","performance":"https://www.gstatic.com/firebasejs/9.19.1/firebase-performance.js","remote-config":"https://www.gstatic.com/firebasejs/9.19.1/firebase-remote-config.js","messaging":"https://www.gstatic.com/firebasejs/9.19.1/firebase-messaging.js","messaging/sw":"https://www.gstatic.com/firebasejs/9.19.1/firebase-messaging/sw.js","database":"https://www.gstatic.com/firebasejs/9.19.1/firebase-database.js","firestore.memory":"https://www.gstatic.com/firebasejs/9.19.1/firebase-firestore.memory.js"}}
[info] ✔  Wrote public/index.html 
[info] 
[info] i  Didn't detect a .git folder. Assuming /Users/adamelgendy/Desktop/OmniHive.Store is the project root. 
[info] i  Authorizing with GitHub to upload your service account to a GitHub repository's secrets store. 
[info] 
[info] Visit this URL on this device to log in:
[info] https://github.com/login/oauth/authorize?client_id=89cf50f02ac6aaed3484&state=130020652&redirect_uri=http%3A%2F%2Flocalhost%3A9005&scope=read%3Auser%20repo%20public_repo
[info] 
[info] Waiting for authentication...
[debug] [2023-04-02T01:22:41.802Z] >>> [apiv2][query] POST https://github.com/login/oauth/access_token [none]
[debug] [2023-04-02T01:22:41.804Z] >>> [apiv2][body] POST https://github.com/login/oauth/access_token [stream]
[debug] [2023-04-02T01:22:41.959Z] <<< [apiv2][status] POST https://github.com/login/oauth/access_token 200
[debug] [2023-04-02T01:22:41.959Z] <<< [apiv2][body] POST https://github.com/login/oauth/access_token {"access_token":"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","token_type":"bearer","scope":"read:user,repo"}
[debug] [2023-04-02T01:22:41.989Z] >>> [apiv2][query] GET https://api.github.com/user [none]
[debug] [2023-04-02T01:22:42.126Z] <<< [apiv2][status] GET https://api.github.com/user 200
[debug] [2023-04-02T01:22:42.126Z] <<< [apiv2][body] GET https://api.github.com/user {"login":"theadamites","id":124354862,"node_id":"U_kgDOB2mBLg","avatar_url":"https://avatars.githubusercontent.com/u/124354862?v=4","gravatar_id":"","url":"https://api.github.com/users/theadamites","html_url":"https://github.com/theadamites","followers_url":"https://api.github.com/users/theadamites/followers","following_url":"https://api.github.com/users/theadamites/following{/other_user}","gists_url":"https://api.github.com/users/theadamites/gists{/gist_id}","starred_url":"https://api.github.com/users/theadamites/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/theadamites/subscriptions","organizations_url":"https://api.github.com/users/theadamites/orgs","repos_url":"https://api.github.com/users/theadamites/repos","events_url":"https://api.github.com/users/theadamites/events{/privacy}","received_events_url":"https://api.github.com/users/theadamites/received_events","type":"User","site_admin":false,"name":null,"company":null,"blog":"","location":null,"email":null,"hireable":null,"bio":null,"twitter_username":null,"public_repos":1,"public_gists":0,"followers":0,"following":1,"created_at":"2023-02-03T10:17:22Z","updated_at":"2023-04-02T01:22:35Z","private_gists":0,"total_private_repos":0,"owned_private_repos":0,"disk_usage":27,"collaborators":0,"two_factor_authentication":false,"plan":{"name":"free","space":976562499,"collaborators":0,"private_repos":10000}}
[info] 
[info] ✔  Success! Logged into GitHub as theadamites 
[info] 
[debug] [2023-04-02T01:27:36.306Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:36.582Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:27:36.583Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:39.346Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:39.388Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:39.592Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:27:39.592Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:39.595Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:27:39.596Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:53.967Z] >>> [apiv2][query] GET https://api.github.com/repos/       /actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:54.053Z] <<< [apiv2][status] GET https://api.github.com/repos/       /actions/secrets/public-key 404
[debug] [2023-04-02T01:27:54.053Z] <<< [apiv2][body] GET https://api.github.com/repos/       /actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:54.274Z] >>> [apiv2][query] GET https://api.github.com/repos/       /actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:54.446Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:54.563Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:27:54.563Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:54.569Z] <<< [apiv2][status] GET https://api.github.com/repos/       /actions/secrets/public-key 404
[debug] [2023-04-02T01:27:54.569Z] <<< [apiv2][body] GET https://api.github.com/repos/       /actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:54.575Z] >>> [apiv2][query] GET https://api.github.com/repos/       /actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:54.784Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:54.846Z] <<< [apiv2][status] GET https://api.github.com/repos/       /actions/secrets/public-key 404
[debug] [2023-04-02T01:27:54.846Z] <<< [apiv2][body] GET https://api.github.com/repos/       /actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:54.889Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:27:54.889Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:55.734Z] >>> [apiv2][query] GET https://api.github.com/repos/       /actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:55.921Z] <<< [apiv2][status] GET https://api.github.com/repos/       /actions/secrets/public-key 404
[debug] [2023-04-02T01:27:55.921Z] <<< [apiv2][body] GET https://api.github.com/repos/       /actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:56.952Z] >>> [apiv2][query] GET https://api.github.com/repos/       /actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:57.047Z] <<< [apiv2][status] GET https://api.github.com/repos/       /actions/secrets/public-key 404
[debug] [2023-04-02T01:27:57.047Z] <<< [apiv2][body] GET https://api.github.com/repos/       /actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:27:57.454Z] >>> [apiv2][query] GET https://api.github.com/repos/       /actions/secrets/public-key type=owner
[debug] [2023-04-02T01:27:57.568Z] <<< [apiv2][status] GET https://api.github.com/repos/       /actions/secrets/public-key 404
[debug] [2023-04-02T01:27:57.568Z] <<< [apiv2][body] GET https://api.github.com/repos/       /actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:28:09.259Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:28:09.536Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:28:09.611Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:28:09.611Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:28:09.617Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:28:09.617Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:28:09.714Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:28:09.790Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:28:09.790Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:28:09.866Z] >>> [apiv2][query] GET https://api.github.com/repos//actions/secrets/public-key type=owner
[debug] [2023-04-02T01:28:10.137Z] <<< [apiv2][status] GET https://api.github.com/repos//actions/secrets/public-key 404
[debug] [2023-04-02T01:28:10.138Z] <<< [apiv2][body] GET https://api.github.com/repos//actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:28:53.164Z] >>> [apiv2][query] GET https://api.github.com/repos/firebase init/actions/secrets/public-key type=owner
[debug] [2023-04-02T01:28:53.260Z] <<< [apiv2][status] GET https://api.github.com/repos/firebase init/actions/secrets/public-key 404
[debug] [2023-04-02T01:28:53.261Z] <<< [apiv2][body] GET https://api.github.com/repos/firebase init/actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:28:54.000Z] >>> [apiv2][query] GET https://api.github.com/repos/firebase init/actions/secrets/public-key type=owner
[debug] [2023-04-02T01:28:54.087Z] <<< [apiv2][status] GET https://api.github.com/repos/firebase init/actions/secrets/public-key 404
[debug] [2023-04-02T01:28:54.087Z] <<< [apiv2][body] GET https://api.github.com/repos/firebase init/actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:28:54.205Z] >>> [apiv2][query] GET https://api.github.com/repos/firebase init/actions/secrets/public-key type=owner
[debug] [2023-04-02T01:28:54.299Z] <<< [apiv2][status] GET https://api.github.com/repos/firebase init/actions/secrets/public-key 404
[debug] [2023-04-02T01:28:54.300Z] <<< [apiv2][body] GET https://api.github.com/repos/firebase init/actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
[debug] [2023-04-02T01:28:54.361Z] >>> [apiv2][query] GET https://api.github.com/repos/firebase init/actions/secrets/public-key type=owner
[debug] [2023-04-02T01:28:54.447Z] <<< [apiv2][status] GET https://api.github.com/repos/firebase init/actions/secrets/public-key 404
[debug] [2023-04-02T01:28:54.447Z] <<< [apiv2][body] GET https://api.github.com/repos/firebase init/actions/secrets/public-key {"message":"Not Found","documentation_url":"https://docs.github.com/rest"}
